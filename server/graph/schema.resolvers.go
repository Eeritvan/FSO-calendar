package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt"

	"github.com/eeritvan/calendar-server/graph/model"
)

// CreateCalEvent is the resolver for the createCalEvent field.
func (r *mutationResolver) CreateCalEvent(ctx context.Context, input model.NewCalEvent) (*model.CalEvent, error) {
	fmt.Println(input.Name)
	return nil, nil
}

// GetCalEvents is the resolver for the getCalEvents field.
func (r *queryResolver) GetCalEvents(ctx context.Context) ([]*model.CalEvent, error) {
	events := []*model.CalEvent{
		{
			ID:   "1",
			Name: "testi1",
		},
		{
			ID:   "2",
			Name: "testi2",
		},
		{
			ID:   "3",
			Name: "testi3",
		},
	}

	return events, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
